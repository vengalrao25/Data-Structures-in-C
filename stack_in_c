
#include <stdio.h>
#include <stdlib.h>
struct stack 
{
    int top ;
    int size ; 
    int * arr ; 
};



int isfull(struct stack * ptr)
{
    if(ptr->top==ptr->size-1)
    {
        return 1;
    }
    else
    {
        return  0 ;
    }
}





int isempty(struct stack * ptr)
{
    if (ptr->top ==-1)
    {
        return 1;
    }
    else
    {
        return  0 ; 
    }
}



int pop(struct stack *ptr)
{
    if(isempty(ptr))
    {
        printf("stack underflow cannot pop from stack!\n");
        return -1;
    }
    else
    {
        int val = ptr->arr[ptr->top];
        ptr->top--;
        return  val ;
    }
}



void push(struct stack * ptr  , int val )
{
    if(isfull(ptr))
    {
        printf("the stack is full . the data cannot be entered %d", val);
    }
    else
    {
        ptr->top++;
        ptr->arr[ptr->top]= val ; 
    }
}

int main()
{
    struct stack *st = (struct stack *) (malloc(sizeof(struct stack)));
    st->size = 5 ; 
    st->top = -1 ; 
    
    
    st->arr = (int *)(malloc(st->size * sizeof(int)));
    printf("stack has been succesfully created\n");
    
    push(st ,45);
    push(st ,2);
    push(st ,5);
    push(st ,9);
    push(st ,2);
    int t = 1;
    while(t!=-1)
    {
       t= pop(st);
    
    printf("%d\t" , t);
    }
    

    return 0;
}
